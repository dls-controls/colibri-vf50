#!/bin/sh

# Script to trigger upgrade of root file system.  This configures the u-boot
# environment to load and execute the upgrade-script.

Error() { echo >&2 "$@"; exit 1; }

# Retrieve named file from TFTP server
tftp_get()
{
    echo "Reading $1 from $TFTP_SERVER ($serverip)"
    tftp -g -l $TEMPFILE -r "$TFTP_PREFIX"$1 $serverip  ||
        Error "Unable to read $TFTP_PREFIX$1"
}


TFTP_DIR=/
TFTP_SERVER=none

# Pick up defaults
[ -e /etc/upgrade.config ]  &&
source /etc/upgrade.config

UPGRADE_STATE=0
TEST_FILES=true
CONFIRM=false
REBOOT_NOW=false
UPGRADE_U_BOOT=0

# Process options
while getopts 'd:S:prfChu' option; do
    case "$option" in
        d)  TFTP_DIR="$OPTARG" ;;
        S)  TFTP_SERVER="$OPTARG" ;;
        p)  UPGRADE_STATE=1 ;;
        f)  TEST_FILES=false ;;
        r)  REBOOT_NOW=true ;;
        C)  CONFIRM=true ;;
        u)  UPGRADE_U_BOOT=1 ;;
        h)  cat <<EOF
Usage: upgrade-rootfs [options] version

Configures upgrade of root file system from tftp server.
    -d: Specify TFTP directory (default is $TFTP_DIR)
    -S: Specify TFTP server (default is $TFTP_SERVER)
    -p  If this flag is set then the persistent state will be replaced.
    -f  This flag can be set to bypass validation of the upgrade files on the
        tftp server.
    -u  This flag can be set to upgrade U-Boot
    -r  If set (together with -C) then reboot will be triggered immediately.
    -C  This flag must be set to confirm the upgrade, otherwise the upgrade will
        be tested but not actually applied.
EOF
            exit 0 ;;
        *)  Error 'Invalid option: try -h for help' ;;
    esac
done

# Read mandatory version
shift $((OPTIND-1))
[ $# -eq 1 ]  ||  Error 'Must specify version.  Try -h for help'
VERSION="$1"

# Assemble target prefix from directory and version
TFTP_PREFIX=$TFTP_DIR/$VERSION-


# Normalise the server name and check it is responding
set -o pipefail
serverip="$(getent hosts "$TFTP_SERVER" | sed 's/ .*//')"  ||
    Error Unable to look up TFTP server "$TFTP_SERVER"


# Check that we can read all the requested files
if $TEST_FILES; then
    TEMPFILE=$(mktemp)
    trap 'rm -f $TEMPFILE' EXIT

    echo Validating upgrade files on TFTP server
    tftp_get upgrade-script.image
    tftp_get zImage
    tftp_get device-tree.dtb
    tftp_get rootfs.img
    [ $UPGRADE_U_BOOT = 1 ] && tftp_get u-boot-nand.imx
    [ $UPGRADE_STATE = 1 ] && tftp_get state.img
fi


# We need to hand control over to u-boot to do the rootfs upgrade.
if $CONFIRM; then
    # Pick up our ethernet configuration
    ipaddr=$(ifconfig eth0 | sed -n '/.* addr:/{s///; s/ .*//; p;q}')
    netmask=$(ifconfig eth0 | sed -n '/.* Mask:/{s///; s/ .*//; p;q}')
    gatewayip=$(ip route | sed -n '/default via /{s///; s/ .*//; p;q}')

    # Update the u-boot environment
    # The ping at the start of the boot command seems to be sometimes required
    # in order to "warm up" the tftp server to ensure that tftpboot succeeds!
    cat <<EOF |
ipaddr $ipaddr
netmask $netmask
gatewayip $gatewayip
serverip $serverip
server_prefix $TFTP_PREFIX
write_state $UPGRADE_STATE
write_u_boot $UPGRADE_U_BOOT
bootcmd ping \$serverip ; \
tftpboot \$scriptaddr \${server_prefix}upgrade-script.image  &&  \
source \$scriptaddr
EOF
    fw_setenv -s /dev/stdin  &&
    # Go!
    $REBOOT_NOW  &&  reboot
fi
